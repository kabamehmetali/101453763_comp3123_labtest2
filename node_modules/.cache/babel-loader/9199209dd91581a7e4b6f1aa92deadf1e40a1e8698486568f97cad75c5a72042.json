{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetalikaba/Desktop/Lab2/101453763_comp3123_labtest22/src/components/Forecast.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getForecastByCity } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forecast = ({\n  city\n}) => {\n  _s();\n  const [forecastData, setForecastData] = useState([]);\n  useEffect(() => {\n    if (city) {\n      axios.get(getForecastByCity(city)).then(response => {\n        const dailyData = response.data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"));\n        setForecastData(dailyData);\n      }).catch(err => console.error(err));\n    }\n  }, [city]);\n  if (!forecastData.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading forecast...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: forecastData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-day\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: new Date(day.dt_txt).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [Math.round(day.main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`,\n        alt: day.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Forecast, \"ICMKhofs5jc8xe0gv6oPHbIvfl4=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useEffect","useState","axios","getForecastByCity","jsxDEV","_jsxDEV","Forecast","city","_s","forecastData","setForecastData","get","then","response","dailyData","data","list","filter","reading","dt_txt","includes","catch","err","console","error","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","day","index","Date","toLocaleDateString","Math","round","main","temp","src","weather","icon","alt","description","_c","$RefreshReg$"],"sources":["/Users/mehmetalikaba/Desktop/Lab2/101453763_comp3123_labtest22/src/components/Forecast.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getForecastByCity } from \"../api/api\";\n\nconst Forecast = ({ city }) => {\n  const [forecastData, setForecastData] = useState([]);\n\n  useEffect(() => {\n    if (city) {\n      axios\n        .get(getForecastByCity(city))\n        .then((response) => {\n          const dailyData = response.data.list.filter((reading) =>\n            reading.dt_txt.includes(\"12:00:00\")\n          );\n          setForecastData(dailyData);\n        })\n        .catch((err) => console.error(err));\n    }\n  }, [city]);\n\n  if (!forecastData.length) return <p>Loading forecast...</p>;\n\n  return (\n    <div className=\"forecast\">\n      {forecastData.map((day, index) => (\n        <div key={index} className=\"forecast-day\">\n          <p>{new Date(day.dt_txt).toLocaleDateString()}</p>\n          <p>{Math.round(day.main.temp)}Â°C</p>\n          <img\n            src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n            alt={day.weather[0].description}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Forecast;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,EAAE;MACRL,KAAK,CACFS,GAAG,CAACR,iBAAiB,CAACI,IAAI,CAAC,CAAC,CAC5BK,IAAI,CAAEC,QAAQ,IAAK;QAClB,MAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACC,MAAM,CAAEC,OAAO,IAClDA,OAAO,CAACC,MAAM,CAACC,QAAQ,CAAC,UAAU,CACpC,CAAC;QACDV,eAAe,CAACI,SAAS,CAAC;MAC5B,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,CAACf,IAAI,CAAC,CAAC;EAEV,IAAI,CAACE,YAAY,CAACgB,MAAM,EAAE,oBAAOpB,OAAA;IAAAqB,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE3D,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,UAAU;IAAAL,QAAA,EACtBjB,YAAY,CAACuB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC3B7B,OAAA;MAAiB0B,SAAS,EAAC,cAAc;MAAAL,QAAA,gBACvCrB,OAAA;QAAAqB,QAAA,EAAI,IAAIS,IAAI,CAACF,GAAG,CAACd,MAAM,CAAC,CAACiB,kBAAkB,CAAC;MAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDzB,OAAA;QAAAqB,QAAA,GAAIW,IAAI,CAACC,KAAK,CAACL,GAAG,CAACM,IAAI,CAACC,IAAI,CAAC,EAAC,OAAE;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpCzB,OAAA;QACEoC,GAAG,EAAE,oCAAoCR,GAAG,CAACS,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,SAAU;QACtEC,GAAG,EAAEX,GAAG,CAACS,OAAO,CAAC,CAAC,CAAC,CAACG;MAAY;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA,GANMI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjCIF,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}