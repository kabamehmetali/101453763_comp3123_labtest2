{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetalikaba/Desktop/Lab2/101453763_comp3123_labtest22/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { getWeatherByCity, getForecastByCity } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CitySearch({\n  onCitySearch\n}) {\n  _s();\n  const [query, setQuery] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const fetchSuggestions = async city => {\n    const response = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=5&appid=df4fb2f0bdfc840acec77f2995aea8d2`);\n    setSuggestions(response.data);\n  };\n  const handleSearch = async city => {\n    const weather = await getWeatherByCity(city);\n    const forecast = await getForecastByCity(city);\n    onCitySearch(weather, forecast);\n    setSuggestions([]);\n    setQuery('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter city name\",\n      value: query,\n      onChange: e => {\n        setQuery(e.target.value);\n        fetchSuggestions(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: suggestions.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSearch(city.name),\n        children: [city.name, \", \", city.country]\n      }, city.lat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(CitySearch, \"wdpuE1R4Ew8YwtN5g+LOgvnqf+I=\");\n_c = CitySearch;\nexport default CitySearch;\nvar _c;\n$RefreshReg$(_c, \"CitySearch\");","map":{"version":3,"names":["React","useState","axios","getWeatherByCity","getForecastByCity","jsxDEV","_jsxDEV","CitySearch","onCitySearch","_s","query","setQuery","suggestions","setSuggestions","fetchSuggestions","city","response","get","data","handleSearch","weather","forecast","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","country","lat","_c","$RefreshReg$"],"sources":["/Users/mehmetalikaba/Desktop/Lab2/101453763_comp3123_labtest22/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { getWeatherByCity, getForecastByCity } from '../api';\n\nfunction CitySearch({ onCitySearch }) {\n  const [query, setQuery] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n\n  const fetchSuggestions = async (city) => {\n    const response = await axios.get(\n      `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=5&appid=df4fb2f0bdfc840acec77f2995aea8d2`\n    );\n    setSuggestions(response.data);\n  };\n\n  const handleSearch = async (city) => {\n    const weather = await getWeatherByCity(city);\n    const forecast = await getForecastByCity(city);\n    onCitySearch(weather, forecast);\n    setSuggestions([]);\n    setQuery('');\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Enter city name\"\n        value={query}\n        onChange={(e) => {\n          setQuery(e.target.value);\n          fetchSuggestions(e.target.value);\n        }}\n      />\n      <ul>\n        {suggestions.map((city) => (\n          <li key={city.lat} onClick={() => handleSearch(city.name)}>\n            {city.name}, {city.country}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default CitySearch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,UAAUA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMa,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACvC,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAC9B,kDAAkDF,IAAI,iDACxD,CAAC;IACDF,cAAc,CAACG,QAAQ,CAACE,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,IAAI,IAAK;IACnC,MAAMK,OAAO,GAAG,MAAMjB,gBAAgB,CAACY,IAAI,CAAC;IAC5C,MAAMM,QAAQ,GAAG,MAAMjB,iBAAiB,CAACW,IAAI,CAAC;IAC9CP,YAAY,CAACY,OAAO,EAAEC,QAAQ,CAAC;IAC/BR,cAAc,CAAC,EAAE,CAAC;IAClBF,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAEf,KAAM;MACbgB,QAAQ,EAAGC,CAAC,IAAK;QACfhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QACxBX,gBAAgB,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;MAClC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACF1B,OAAA;MAAAgB,QAAA,EACGV,WAAW,CAACqB,GAAG,CAAElB,IAAI,iBACpBT,OAAA;QAAmB4B,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACJ,IAAI,CAACoB,IAAI,CAAE;QAAAb,QAAA,GACvDP,IAAI,CAACoB,IAAI,EAAC,IAAE,EAACpB,IAAI,CAACqB,OAAO;MAAA,GADnBrB,IAAI,CAACsB,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACvB,EAAA,CAvCQF,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAyCnB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}