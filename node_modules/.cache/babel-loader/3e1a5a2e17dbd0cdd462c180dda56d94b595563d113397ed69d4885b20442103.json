{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetalikaba/Desktop/Lab2/101453763_comp3123_labtest22/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WeatherCard from './components/WeatherCard';\nimport WeatherModal from './components/WeatherModal';\nimport { fetchWeather, fetchForecast } from './api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [city, setCity] = useState('Toronto');\n  const [forecast, setForecast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedWeather, setSelectedWeather] = useState(null);\n  useEffect(() => {\n    const getWeatherData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const weatherResponse = await fetchWeather(city);\n        const forecastResponse = await fetchForecast(city);\n        const todayWeather = {\n          ...weatherResponse.data,\n          dt_txt: new Date().toISOString()\n        };\n        const dailyData = forecastResponse.data.list.filter(reading => reading.dt_txt.includes('12:00:00'));\n        const combinedForecast = [todayWeather, ...dailyData];\n        setForecast(combinedForecast);\n      } catch (err) {\n        setError('Failed to fetch weather data. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getWeatherData();\n  }, [city]);\n  const handleSearch = searchedCity => {\n    setCity(searchedCity);\n  };\n  const handleCardClick = weather => {\n    setSelectedWeather(weather);\n  };\n  const handleCloseModal = () => {\n    setSelectedWeather(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Weather App\",\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-cards-container\",\n        children: forecast.map((weather, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleCardClick(weather),\n          className: `card-wrapper ${index === 0 ? 'today-card' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(WeatherCard, {\n            weather: weather,\n            city: city,\n            isToday: index === 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), selectedWeather && /*#__PURE__*/_jsxDEV(WeatherModal, {\n      weather: selectedWeather,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"ToicNWEp2NESdVGqvBtfBiEX6QY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","WeatherCard","WeatherModal","fetchWeather","fetchForecast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","city","setCity","forecast","setForecast","loading","setLoading","error","setError","selectedWeather","setSelectedWeather","getWeatherData","weatherResponse","forecastResponse","todayWeather","data","dt_txt","Date","toISOString","dailyData","list","filter","reading","includes","combinedForecast","err","handleSearch","searchedCity","handleCardClick","weather","handleCloseModal","className","children","title","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","isToday","onClose","_c","$RefreshReg$"],"sources":["/Users/mehmetalikaba/Desktop/Lab2/101453763_comp3123_labtest22/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WeatherCard from './components/WeatherCard';\nimport WeatherModal from './components/WeatherModal';\nimport { fetchWeather, fetchForecast } from './api';\n\nconst App = () => {\n    const [city, setCity] = useState('Toronto');\n    const [forecast, setForecast] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedWeather, setSelectedWeather] = useState(null);\n\n    useEffect(() => {\n        const getWeatherData = async () => {\n            setLoading(true);\n            setError(null);\n            try {\n                const weatherResponse = await fetchWeather(city);\n                const forecastResponse = await fetchForecast(city);\n\n                const todayWeather = {\n                    ...weatherResponse.data,\n                    dt_txt: new Date().toISOString(),\n                };\n\n                const dailyData = forecastResponse.data.list.filter((reading) =>\n                    reading.dt_txt.includes('12:00:00')\n                );\n\n                const combinedForecast = [todayWeather, ...dailyData];\n                setForecast(combinedForecast);\n            } catch (err) {\n                setError('Failed to fetch weather data. Please try again.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        getWeatherData();\n    }, [city]);\n\n    const handleSearch = (searchedCity) => {\n        setCity(searchedCity);\n    };\n\n    const handleCardClick = (weather) => {\n        setSelectedWeather(weather);\n    };\n\n    const handleCloseModal = () => {\n        setSelectedWeather(null);\n    };\n\n    return (\n        <div className=\"app\">\n            <Navbar title=\"Weather App\" onSearch={handleSearch} />\n            {loading && <p>Loading...</p>}\n            {error && <p className=\"error\">{error}</p>}\n            {!loading && !error && (\n                <>\n                    <h2>{city}</h2>\n                    <div className=\"weather-cards-container\">\n                        {forecast.map((weather, index) => (\n                            <div\n                                key={index}\n                                onClick={() => handleCardClick(weather)}\n                                className={`card-wrapper ${index === 0 ? 'today-card' : ''}`}\n                            >\n                                <WeatherCard weather={weather} city={city} isToday={index === 0} />\n                            </div>\n                        ))}\n                    </div>\n                </>\n            )}\n            {selectedWeather && (\n                <WeatherModal weather={selectedWeather} onClose={handleCloseModal} />\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}